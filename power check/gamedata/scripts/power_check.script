local soundObject = nil
local volume = 1
local is_exo = item_exo_device.is_exo
local get_data = item_exo_device.get_data
local power_check_bind = key_bindings.kCUSTOM21
function on_key_release(key)
	local bind = dik_to_bind(key)
    if bind ~= power_check_bind then return end
    local exosuit = db.actor:item_in_slot(7)

    if not (exosuit and is_exo(exosuit)) then
        actor_menu.set_msg(1, game.translate_string("st_no_exo"), 3)

        return
    end

    local id = exosuit:id()
    local data = get_data(id)

    if not data.supply then
        actor_menu.set_msg(1, game.translate_string("st_no_psu"), 3)

        return
    end

    local max_power = data.supply.max
    local power = data.power
    local coef = power / max_power
    local power_level = clamp((math.floor(coef * 100) - (math.floor(coef * 100) % 5)), 5, 100)
    soundObject = sound_object("hev\\power_level_is_" .. power_level)
    soundObject:play(db.actor, 0, sound_object.s2d)
    soundObject.volume = coef * volume
    local str = strformat(game.translate_string("st_check_power"), math.floor(coef * 100))
    actor_menu.set_msg(1, str, 3)
end

function on_game_start()
    RegisterScriptCallback("on_key_release", on_key_release)
end
